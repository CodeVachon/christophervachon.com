function swapClassesForSyntaxHighlighting(a,b){var c="";for(var d in b){var e=new RegExp(b[d].pattern,"i");a.html().match(e)&&(c=b[d].class)}return c}$(document).ready(function(){$("code").each(function(){var a=$("<table>").addClass("syntax-highlighting").append($("<tr>").append($("<td>").addClass("gutter")).append($("<td>").addClass("code"))),b=$(this).html().split(/\r\n|\r|\n|<br(?:\s\/)?>/g),c=b.length-1,d=[{"class":"const",pattern:"(?:(var|new|function|private|if|else)\\s)"},{"class":"operator",pattern:"((?:[\\+\\-\\=\\!\\|\\(\\)\\{\\}]|&amp;){1,}|(?:[^\\*\\/]\\/(?!\\/|\\*)))"},{"class":"comment",pattern:"\\/\\/[^\\(\\n|\\r)]+|\\/\\*|\\*\\/"}],e="";for(var f in d)e+=d[f].pattern+"|";e="("+e.replace(/\|$/,"")+")";for(var g=new RegExp(e,"gi"),h=0;c>=h;h++){var i=b[h];i=i.replace(g,"<span class='found'>$1</span>"),i=$("<div>").html(i||"&nbsp;"),a.find("td.gutter").append($("<div>").html(h+1)),a.find("td.code").append(i)}a.find("td.code .found").each(function(){$(this).removeClass("found").addClass(swapClassesForSyntaxHighlighting($(this),d))}),$(this).replaceWith(a)})});